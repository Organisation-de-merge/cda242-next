name: DÃ©mon CI/CD Pipeline
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4      

      - name: Save cache (node_modules)
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}--node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run npm install
        run: npm install

      - name: Run Build
        run: npm run build

  test:
    needs: 
      - build
    runs-on: ubuntu-latest
    strategy:
        matrix:
            browser: [chrome, edge]

    steps:
      - uses: actions/checkout@v4
      - name: Restore cache (node_modules)
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}--node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Cypress
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          browser: ${{ matrix.browser }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
            name: cypress-videos-${{ matrix.browser }}
            path: /cypress/videos

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots 
          path: /cypress/screenshots

  # deploy:
  #   needs: 
  #     - test
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - name: Deploy to Server via SSH
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ secrets.AWS_HOST }}
  #         username: ${{ secrets.AWS_USERNAME }}
  #         key: ${{ secrets.AWS_KEY }}
  #         script: |
  #           export NVM_DIR="$HOME/.nvm"
  #           [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
  #           cd cda242-next
  #           git pull origin main
  #           npm install
  #           npm run build
  #           pm2 restart npm

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: MathisTrn
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/organisation-de-merge/cda242-next/cda242-dockerpackage:latest

  deploy-docker:
    needs: 
      - build-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Deploy Docker Container via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            cd prod
            sudo docker compose -f docker-compose.prod.yml pull
            sudo docker compose -f docker-compose.prod.yml up -d